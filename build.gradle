/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'zhouhh' at '16-11-14 上午9:33' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */
import org.gradle.plugins.ide.eclipse.model.Facet


buildscript {

    ext {
        springVersion = "4.3.5.RELEASE"
        springBootVersion="1.4.3.RELEASE"

    }
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public"}
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/plugins-release"}
        mavenCentral()
    }
    dependencies {
        
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"
    
    }
    
}
// Apply the java plugin to add support for Java
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'


sourceCompatibility = 1.8    
webAppDirName = 'WebContent'   

war {
  baseName = 'quartzcluster'
}

eclipse {
    classpath {
       downloadSources=true
    }
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public"}
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/plugins-release"}
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
    jcenter()
    mavenCentral()
    
}

sourceSets{
    main{
        java{srcDir 'src/main/java'}
        resources{srcDir 'src/main/resources'}
    }
}
// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    //quartz needs this component
    compile "org.springframework:spring-context-support:$springVersion" 
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile "mysql:mysql-connector-java:5.1.31"
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile "org.quartz-scheduler:quartz:2.2.1"
    compile "org.apache.commons:commons-lang3:3.5"
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
task download(type: Copy) {  
  from configurations.runtime  
  into 'lib' //save jar to lib   
}